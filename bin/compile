#!/usr/bin/env bash

echo "-----> APT GET SOME PACKAGE"

pip install numpy

BUILD=$1
CACHE=$2

APT_CACHE_DIR="$2/apt/cache"
APT_STATE_DIR="$2/apt/state"

mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"

apt-get $APT_OPTIONS update
apt-get $APT_OPTIONS -y --allow-download=true -d install --reinstall cmake python3.5 python3.5-dev python3-numpy

mkdir -p $1/.apt

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  dpkg -x $DEB $1/.apt/
done

export PATH="$1/.apt/usr/bin:$PATH"
export LD_LIBRARY_PATH="$1/.apt/usr/lib/x86_64-linux-gnu:$1/.apt/usr/lib"
export LIBRARY_PATH="$1/.apt/usr/lib/x86_64-linux-gnu:$1/.apt/usr/lib"
export INCLUDE_PATH="$1/.apt/usr/include:$1/.apt/usr/include/x86_64-linux-gnu:$1/.apt/usr/include/x86_64-linux-gnu/python3"
export CMAKE_INCLUDE_PATH="$1/.apt/usr/include:$1/.apt/usr/include/x86_64-linux-gnu"
export CMAKE_PREFIX_PATH="$1/.apt/"

echo $INCLUDE_PATH

cp $1/.apt/usr/include/x86_64-linux-gnu/python3.5m/pyconfig.h $1/.apt/usr/include/python3.5m/pyconfig.h

echo "-----> BUILDING OPENCV"

if [ -f $2/release/Makefile ]; then
  echo "use cache"
  cd $2/release
  sed -i "s#/tmp/build_[0-9a-f]+/.apt/usr/bin/cmake#$1/.apt/usr/bin/cmake#g" Makefile
  grep cmake Makefile
  make install
  echo "use ok"
else
  cd $2
  echo "download"
  wget -q https://github.com/Itseez/opencv/archive/3.2.0.tar.gz -O 3.2.0.tar.gz
  tar xf 3.2.0.tar.gz
  rm 3.2.0.tar.gz
  echo "build release"
  rm -rf release
  mkdir release
  cd release
  cmake \
  -DBUILD_TIFF=ON \
  -DBUILD_opencv_java=OFF \
  -DWITH_CUDA=OFF \
  -DENABLE_AVX=OFF \
  -DWITH_OPENGL=OFF \
  -DWITH_OPENCL=ON \
  -DWITH_IPP=OFF \
  -DWITH_TBB=OFF \
  -DWITH_EIGEN=OFF \
  -DWITH_V4L=OFF \
  -DWITH_VTK=OFF \
  -DBUILD_TESTS=OFF \
  -DBUILD_PERF_TESTS=OFF \
  -DCMAKE_BUILD_TYPE=RELEASE \
  -DBUILD_opencv_python2=OFF \
  -DBUILD_opencv_python3=ON \
  -DCMAKE_INSTALL_PREFIX=$1/.apt/usr \
  -DPYTHON3_EXECUTABLE=$(which python3.5) \
  -DPYTHON3_INCLUDE_DIR=$1/.apt/usr/include/python3.5m \
  -DPYTHON3_PACKAGES_PATH=$1/.apt/usr/lib/python3/dist-packages \
  -DPYTHON_LIBRARY=$1/.apt/usr/lib/x86_64-linux-gnu/libpython3.5m.so \
  -DPYTHON3_NUMPY_INCLUDE_DIRS=$1/.apt/usr/lib/python3/dist-packages/numpy/core/include/ \
  ../opencv-3.2.0
  make -j4 install
  rm -rf $2/opencv-3.2.0
  cd $2
  tar zcf opencv-release.tar.gz release
  curl --upload-file opencv-release.tar.gz  https://transfer.sh/opencv-release.tar.gz 
fi

echo "-----> setting PATHS for opencv"

cp /usr/lib/x86_64-linux-gnu/libjasper.so.1 $1/.apt/usr/lib/x86_64-linux-gnu/

mkdir $1/.apt/cv-dist
mv $1/.apt/usr/lib/python3/dist-packages/cv2.cpython-35m-x86_64-linux-gnu.so $1/.apt/cv-dist/cv2.so

mkdir -p $1/.profile.d
cat << EOF > $1/.profile.d/opencv.sh
export LIBRARY_PATH=$LIBRARY_PATH:/app/.apt/usr/lib/x86_64-linux-gnu:/app/.apt/usr/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/app/.apt/usr/lib/x86_64-linux-gnu:/app/.apt/usr/lib
export PYTHONPATH=$PYTHONPATH:/app/.apt/cv-dist/
EOF


echo "-----> oki"
